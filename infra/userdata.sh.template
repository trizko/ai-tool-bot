#!/bin/bash
set -euxo pipefail

########################
### SCRIPT VARIABLES ###
########################

# Name of the user to create and grant sudo privileges
USERNAME=ai-toolbox-bot

# Whether to copy over the root user's `authorized_keys` file to the new sudo
# user.
COPY_AUTHORIZED_KEYS_FROM_ROOT=true

# Additional public keys to add to the new sudo user
# OTHER_PUBLIC_KEYS_TO_ADD=(
#     "ssh-rsa AAAAB..."
#     "ssh-rsa AAAAB..."
# )
OTHER_PUBLIC_KEYS_TO_ADD=(
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILxc1zbazGm3rrEToP8LvvkWdfjBzlSGAeHG6e/3NEoV ai-toolbox-bot-github-actions"
)

####################
### SCRIPT LOGIC ###
####################

# Add sudo user and grant privileges
useradd --create-home --shell "/bin/bash" --groups sudo "${USERNAME}"
echo "${USERNAME} ALL=(ALL) NOPASSWD: ALL" | EDITOR='tee -a' visudo

# Create SSH directory for sudo user
home_directory="$(eval echo ~${USERNAME})"
mkdir --parents "${home_directory}/.ssh"

# Copy `authorized_keys` file from root if requested
if [ "${COPY_AUTHORIZED_KEYS_FROM_ROOT}" = true ]; then
    cp /root/.ssh/authorized_keys "${home_directory}/.ssh"
fi

# Add additional provided public keys
for pub_key in "${OTHER_PUBLIC_KEYS_TO_ADD[@]}"; do
    echo "${pub_key}" >> "${home_directory}/.ssh/authorized_keys"
done

# Adjust SSH configuration ownership and permissions
chmod 0700 "${home_directory}/.ssh"
chmod 0600 "${home_directory}/.ssh/authorized_keys"
chown --recursive "${USERNAME}":"${USERNAME}" "${home_directory}/.ssh"

# Disable root SSH login with password
sed --in-place 's/^PermitRootLogin.*/PermitRootLogin no/g' /etc/ssh/sshd_config
if sshd -t -q; then
    systemctl restart sshd
fi

# Install UFW firewall
apt update
apt install ufw
# Add exception for SSH and then enable UFW firewall
ufw allow OpenSSH
ufw --force enable

# Install docker and login to digitalocean image registry
wget -O install_docker.sh get.docker.com
sh ./install_docker.sh
docker login -u {{DO_API_KEY}} -p {{DO_API_KEY}} registry.digitalocean.com

# Create systemd files for managing ai-toolbox-bot docker container
cat <<EOF > /etc/systemd/system/ai-toolbox-bot.service
[Unit]
Description=ai-toolbox-bot

[Service]
ExecStartPre=docker pull registry.digitalocean.com/ai-stuff-registry/ai-toolbox-bot:latest
ExecStartPre=docker run --rm --name=ai-toolbox-bot-deploy registry.digitalocean.com/ai-stuff-registry/ai-toolbox-bot:latest run deploy
ExecStart=docker run --rm --name=ai-toolbox-bot-start registry.digitalocean.com/ai-stuff-registry/ai-toolbox-bot:latest run start
ExecStop=docker stop ai-toolbox-bot-start
User=root

Restart=always
RestartSec=30

[Install]
WantedBy=multi-user.target
EOF